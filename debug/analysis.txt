Type: cpu
Time: Mar 12, 2018 at 11:20am (AEST)
Duration: 30.03s, Total samples = 4.73s (15.75%)
Showing nodes accounting for 4.56s, 96.41% of 4.73s total
Dropped 126 nodes (cum <= 0.02s)
      flat  flat%   sum%        cum   cum%
     3.50s 74.00% 74.00%      3.50s 74.00%  runtime.memclrNoHeapPointers
     0.47s  9.94% 83.93%      0.48s 10.15%  syscall.Syscall
     0.20s  4.23% 88.16%      0.20s  4.23%  runtime.nanotime
     0.13s  2.75% 90.91%      0.13s  2.75%  runtime.procyield
     0.12s  2.54% 93.45%      0.12s  2.54%  runtime.madvise
     0.03s  0.63% 94.08%      0.03s  0.63%  runtime.memmove
     0.03s  0.63% 94.71%      0.03s  0.63%  runtime.osyield
     0.03s  0.63% 95.35%      0.03s  0.63%  runtime.sys_umtx_op
     0.01s  0.21% 95.56%      0.49s 10.36%  bytes.(*Buffer).ReadFrom
     0.01s  0.21% 95.77%      0.49s 10.36%  internal/poll.(*FD).Read
     0.01s  0.21% 95.98%      0.39s  8.25%  runtime.scang
     0.01s  0.21% 96.19%      0.04s  0.85%  runtime.scanobject
     0.01s  0.21% 96.41%      0.48s 10.15%  syscall.read
         0     0% 96.41%      0.04s  0.85%  bufio.(*Writer).ReadFrom
         0     0% 96.41%      0.17s  3.59%  bytes.(*Buffer).Write
         0     0% 96.41%      0.17s  3.59%  bytes.(*Buffer).grow
         0     0% 96.41%      0.17s  3.59%  bytes.makeSlice
         0     0% 96.41%      4.16s 87.95%  github.com/minio/minio-go.Client.PutEncryptedObject
         0     0% 96.41%      4.16s 87.95%  github.com/minio/minio-go.Client.PutObjectWithContext
         0     0% 96.41%      0.04s  0.85%  github.com/minio/minio-go.Client.executeMethod
         0     0% 96.41%      0.03s  0.63%  github.com/minio/minio-go.Client.newRequest
         0     0% 96.41%      4.16s 87.95%  github.com/minio/minio-go.Client.putObjectMultipartStreamNoLength
         0     0% 96.41%      0.78s 16.49%  github.com/minio/minio-go/pkg/encrypt.(*CBCSecureMaterials).Read
         0     0% 96.41%      4.16s 87.95%  hashtree/uploadFiles.UploadFile
         0     0% 96.41%      0.50s 10.57%  io.(*LimitedReader).Read
         0     0% 96.41%      0.56s 11.84%  io.Copy
         0     0% 96.41%      0.56s 11.84%  io.CopyN
         0     0% 96.41%      0.05s  1.06%  io.LimitReader (inline)
         0     0% 96.41%      0.78s 16.49%  io.ReadAtLeast
         0     0% 96.41%      0.78s 16.49%  io.ReadFull
         0     0% 96.41%      0.56s 11.84%  io.copyBuffer
         0     0% 96.41%      0.05s  1.06%  net/http.(*Request).write
         0     0% 96.41%      0.05s  1.06%  net/http.(*persistConn).writeLoop
         0     0% 96.41%      0.05s  1.06%  net/http.(*transferWriter).WriteBody
         0     0% 96.41%      0.48s 10.15%  os.(*File).Read
         0     0% 96.41%      0.48s 10.15%  os.(*File).read
         0     0% 96.41%      0.12s  2.54%  runtime.(*mcache).nextFree
         0     0% 96.41%      0.12s  2.54%  runtime.(*mcache).nextFree.func1
         0     0% 96.41%      0.12s  2.54%  runtime.(*mcache).refill
         0     0% 96.41%      0.12s  2.54%  runtime.(*mcentral).cacheSpan
         0     0% 96.41%      0.12s  2.54%  runtime.(*mcentral).grow
         0     0% 96.41%      3.43s 72.52%  runtime.(*mheap).alloc
         0     0% 96.41%      0.12s  2.54%  runtime.(*mheap).scavenge
         0     0% 96.41%      0.43s  9.09%  runtime.gcBgMarkWorker
         0     0% 96.41%      0.43s  9.09%  runtime.gcBgMarkWorker.func2
         0     0% 96.41%      0.43s  9.09%  runtime.gcDrain
         0     0% 96.41%      0.03s  0.63%  runtime.gentraceback
         0     0% 96.41%      0.03s  0.63%  runtime.greyobject
         0     0% 96.41%      0.07s  1.48%  runtime.heapBits.initSpan
         0     0% 96.41%      3.38s 71.46%  runtime.largeAlloc
         0     0% 96.41%      3.45s 72.94%  runtime.makeslice
         0     0% 96.41%      3.53s 74.63%  runtime.mallocgc
         0     0% 96.41%      3.38s 71.46%  runtime.mallocgc.func1
         0     0% 96.41%      0.39s  8.25%  runtime.markroot
         0     0% 96.41%      0.39s  8.25%  runtime.markroot.func1
         0     0% 96.41%      0.06s  1.27%  runtime.newobject
         0     0% 96.41%      0.12s  2.54%  runtime.runtime_debug_freeOSMemory.func1
         0     0% 96.41%      0.03s  0.63%  runtime.scanstack
         0     0% 96.41%      0.10s  2.11%  runtime.scavengeTreapNode
         0     0% 96.41%      0.10s  2.11%  runtime.scavengetreap
         0     0% 96.41%      0.12s  2.54%  runtime.sysUnused
         0     0% 96.41%      4.10s 86.68%  runtime.systemstack
         0     0% 96.41%      0.12s  2.54%  runtime/debug.FreeOSMemory
         0     0% 96.41%      0.12s  2.54%  runtime/debug.freeOSMemory
         0     0% 96.41%      0.48s 10.15%  syscall.Read
